kind: pipeline 
type: docker
name: CI

trigger :
    event:
        - push

steps:
    - name: build
      image: mcr.microsoft.com/dotnet/sdk:8.0
      commands:
        - cd sources
        - export PATH="$PATH:/root/.dotnet/tools"
        - dotnet tool install -g --version 6.5.0 Swashbuckle.AspNetCore.Cli
        - dotnet restore Backend.sln
        - dotnet build Backend.sln -c Release --no-restore
        - dotnet publish Backend.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release

    - name: tests
      image: mcr.microsoft.com/dotnet/sdk:8.0
      commands:
        - cd sources
        - dotnet restore Backend.sln
        - dotnet test Backend.sln --no-restore
      depends_on: [build]

    - name: code-analysis
      image: hub.codefirst.iut.uca.fr/hugo.livet/codefirst-dronesonarplugin-dotnet8
      commands:
        - cd sources/
        - dotnet restore Backend.sln
        - dotnet sonarscanner begin /k:AthletiX_Backend /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
        - dotnet build Backend.sln -c Release --no-restore
        - dotnet test Backend.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
        - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
        - dotnet publish Backend.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
        - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
      secrets: [ SECRET_SONAR_LOGIN ]
      settings:
        sonar_host: https://codefirst.iut.uca.fr/sonar/
        sonar_token:
          from_secret: SECRET_SONAR_LOGIN
      depends_on: [tests]

    - name: generate-doxygen
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
      failure: ignore
      volumes:
        - name: docs
          path: /docs/doxygen
      commands:
        - /entrypoint.sh
      when:
        branch:
          - master
        event:
          - push
          - pull_request
      depends_on: [ tests ]

volumes:
- name: docs
  temp: {}

---
kind: pipeline
type: docker
name: CD

trigger :
    event:
        - push

steps:
    - name: verif-dockerfile
      image: hadolint/hadolint:latest-alpine
      commands:
        - hadolint sources/Dockerfile

    - name: build-image
      image: plugins/docker
      settings:
        dockerfile: sources/Dockerfile
        context: sources/
        registry: hub.codefirst.iut.uca.fr
        repo: hub.codefirst.iut.uca.fr/hugo.livet/backend-athletix
        username:
          from_secret: secret-registry-username
        password:
          from_secret: secret-registry-password
      depends_on: [ verif-dockerfile ]
    
    - name: ath-psql-database
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
      environment:
          IMAGENAME: hub.codefirst.iut.uca.fr/hugo.livet/database-athletix:latest
          CONTAINERNAME: ath-psql-database
          COMMAND: create
          # OVERWRITE: false
          PRIVATE: true
          #CODEFIRST_CLIENTDRONE_ENV_POSTGRES_PASSWORD:
            #from_secret: db_password
          #CODEFIRST_CLIENTDRONE_ENV_POSTGRES_USER:
            #from_secret: db_user
          #CODEFIRST_CLIENTDRONE_ENV_POSTGRES_DB:
            #from_secret: db_database
          ADMINS: hugolivet,alexandreglenat,mohamedhassani,zakariyasaoula
      depends_on: [ build-image ]

    - name: deploy-container-api
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
      environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/hugo.livet/backend-athletix:latest
        CONTAINERNAME: ath-api
        COMMAND: create
        # OVERWRITE: false
        CODEFIRST_CLIENTDRONE_ENV_SGBD: PG_SGBD
        CODEFIRST_CLIENTDRONE_ENV_SGBD_HOST: AthletiX-ath-psql-database
        CODEFIRST_CLIENTDRONE_ENV_SGBD_PORT: 5432
        CODEFIRST_CLIENTDRONE_ENV_SGBD_USER:
          from_secret: db_user
        CODEFIRST_CLIENTDRONE_ENV_SGBD_PSWD:
          from_secret: db_password
        CODEFIRST_CLIENTDRONE_ENV_SGBD_NAME:
          from_secret: db_database
        ADMINS: hugolivet,alexandreglenat,mohamedhassani,zakariyasaoula
      depends_on: [ build-image ]

depends_on: [CI]