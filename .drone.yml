kind: pipeline 
type: docker
name: CI

trigger :
    event:
        - push

steps:
    - name: build
      image: mcr.microsoft.com/dotnet/sdk:8.0
      commands:
        - cd sources
        - export PATH="$PATH:/root/.dotnet/tools"
        - dotnet tool install -g --version 6.5.0 Swashbuckle.AspNetCore.Cli
        - dotnet restore Backend.sln
        - dotnet build Backend.sln -c Release --no-restore
        - dotnet publish Backend.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release

    - name: tests
      image: mcr.microsoft.com/dotnet/sdk:8.0
      commands:
        - cd sources
        - dotnet restore Backend.sln
        - dotnet test Backend.sln --no-restore
      depends_on: [build]

#    - name: code-analysis
#      image: hub.codefirst.iut.uca.fr/hugo.livet/codefirst-dronesonarplugin-dotnet8
#      commands:
#        - cd sources/
#        - dotnet restore Backend.sln
#        - dotnet sonarscanner begin /k:AthletiX_Backend /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
#        - dotnet build Backend.sln -c Release --no-restore
#        - dotnet test Backend.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
#        - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
#        - dotnet publish Backend.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
#        - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
#      secrets: [ SECRET_SONAR_LOGIN ]
#      settings:
#        # accessible en ligne de commande par ${PLUGIN_SONAR_HOST}
#        sonar_host: https://codefirst.iut.uca.fr/sonar/
#        # accessible en ligne de commande par ${PLUGIN_SONAR_TOKEN}
#        sonar_token:
#          from_secret: SECRET_SONAR_LOGIN
#      depends_on: [tests]

    - name: generate-doxygen
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
      failure: ignore
      volumes:
        - name: docs
          path: /docs/doxygen
      commands:
        - /entrypoint.sh
      when:
        branch:
          - master
        event:
          - push
          - pull_request
      depends_on: [ tests ]

volumes:
- name: docs
  temp: {}

#---
#kind: pipeline
#type: docker
#name: CD

#trigger :
#    event:
#        - push

#steps:
#    - name: verif-dockerfile
#      image: hadolint/hadolint:latest-alpine
#      commands:
#        - hadolint sources/1.API/Dockerfile
#
#    - name: build-image
#      image: plugins/docker
#      settings:
#        dockerfile: sources/1.API/Dockerfile
#        context: sources/
#        registry: hub.codefirst.iut.uca.fr
#        repo: hub.codefirst.iut.uca.fr/hugo.livet/cicd_openlibraryws_wrapper
#        username:
#          from_secret: secret-registry-username
#        password:
#          from_secret: secret-registry-password
#      depends_on: [ verif-dockerfile ]
#
#    - name: deploy-container-mysql
#      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
#      environment:
#          IMAGENAME: mariadb:10
#          CONTAINERNAME: mysql
#          COMMAND: create
#          # OVERWRITE: false
#          PRIVATE: true
#          CODEFIRST_CLIENTDRONE_ENV_MARIADB_ROOT_PASSWORD:
#            from_secret: db_root_password
#          CODEFIRST_CLIENTDRONE_ENV_MARIADB_DATABASE:
#            from_secret: db_database
#          CODEFIRST_CLIENTDRONE_ENV_MARIADB_USER:
#            from_secret: db_user
#          CODEFIRST_CLIENTDRONE_ENV_MARIADB_PASSWORD:
#            from_secret: db_password
#      depends_on: [ build-image ]

#    - name: deploy-container
#      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
#      environment:
#        IMAGENAME: hub.codefirst.iut.uca.fr/hugo.livet/cicd_openlibraryws_wrapper:latest
#        CONTAINERNAME: hugo_livet_cicd
#        COMMAND: create
#        # OVERWRITE: false
#        CODEFIRST_CLIENTDRONE_ENV_TYPE_DATA: BDD
#        CODEFIRST_CLIENTDRONE_ENV_HOST_DB: hugolivet-mysql
#        CODEFIRST_CLIENTDRONE_ENV_PORT_DB: 3306
#        CODEFIRST_CLIENTDRONE_ENV_USER_DB:
#          from_secret: db_user
#        CODEFIRST_CLIENTDRONE_ENV_PSWD_DB:
#          from_secret: db_password
#        CODEFIRST_CLIENTDRONE_ENV_NAME_DB:
#          from_secret: db_database
#      depends_on: [ deploy-container-mysql ]

#    - name: deploy-container-stub
#      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
#      environment:
#        IMAGENAME: hub.codefirst.iut.uca.fr/hugo.livet/cicd_openlibraryws_wrapper:latest
#        CONTAINERNAME: hugo_livet_cicd_stub
#        COMMAND: create
#        # OVERWRITE: false
#        CODEFIRST_CLIENTDRONE_ENV_TYPE_DATA: STUB
#      depends_on: [ build-image ]

#    - name: deploy-container-api
#      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
#      environment:
#        IMAGENAME: hub.codefirst.iut.uca.fr/hugo.livet/cicd_openlibraryws_wrapper:latest
#        CONTAINERNAME: hugo_livet_cicd_api
#        COMMAND: create
#        # OVERWRITE: false
#        CODEFIRST_CLIENTDRONE_ENV_TYPE_DATA: API
#      depends_on: [ build-image ]